{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/analytics.js","webpack://exports/./src/map-shared-styles.js","webpack://exports/./src/replace-overrides.js","webpack://exports/./src/replace-shared-styles.js","webpack://exports/./src/replace-symbols.js","webpack://exports/./src/script.js","webpack://exports/./src/sync-library.js","webpack://exports/external \"sketch\""],"names":["trackingID","uuidKey","baseURL","uuid","Settings","globalSettingForKey","err","value","NSUserDefaults","standardUserDefaults","objectForKey","NSUUID","UUID","UUIDString","setGlobalSettingForKey","googleAnalytics","category","action","label","url","version","sketch","encodeURI","__command","pluginBundle","name","session","NSURLSession","sharedSession","task","dataTaskWithURL","NSURL","URLWithString","NSString","stringWithString","resume","createLookup","styles","reduce","prev","s","document","layer","getSharedLayerStyles","text","getSharedTextStyles","docSymbolInstances","symbolsMap","layerStylesMap","textStylesMap","forEach","symbolInstance","overrides","override","property","libraryStyles","lookup","map","librarySharedStyle","currentSharedStyle","imported","import","getLibrary","id","getAllInstancesLayers","l","sharedStyleId","style","syncWithSharedStyle","getAllInstances","library","docSymbols","getSymbols","length","librarySymbols","getImportableSymbolReferencesForDocument","symbolMaster","instances","concat","matchingSymbolInLib","find","importedSymbolMaster","symbolId","parent","libraries","getLibraries","filter","valid","enabled","UI","getSelectionFromUser","selectionIndex","ok","doc","getSelectedDocument","chosenLibrary","syncLibrary","message","lookups","mapSharedStyles","replaceSharedStyles","getImportableLayerStyleReferencesForDocument","getImportableTextStyleReferencesForDocument","replaceSymbols","replaceOverrides","sketchObject","reloadInspector"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","/* globals NSUUID, __command, NSURLSession, NSURL, NSString, NSUserDefaults */\n\nimport { version, Settings } from 'sketch'\n\nconst trackingID = 'UA-128191866-1'\nconst uuidKey = 'google.analytics.uuid'\nconst baseURL = 'https://www.google-analytics.com/collect?v=1'\nlet uuid\ntry {\n  uuid = Settings.globalSettingForKey(uuidKey)\n} catch (err) {\n  // this shouldn't be needed if we'd use Settings from the beginning\n  const value = NSUserDefaults.standardUserDefaults().objectForKey(uuidKey)\n  if (typeof value === 'string') {\n    uuid = value\n  } else {\n    uuid = NSUUID.UUID().UUIDString()\n  }\n  Settings.setGlobalSettingForKey(uuid, uuidKey)\n}\n\nif (!uuid) {\n  uuid = NSUUID.UUID().UUIDString()\n  Settings.setGlobalSettingForKey(uuid, uuidKey)\n}\n\nexport default function googleAnalytics(category, action, label, value) {\n  let url = baseURL\n  // Tracking ID\n  url += `&tid=${trackingID}`\n  // Source\n  url += `&ds=sketch${version.sketch}`\n  // Client ID\n  url += `&cid=${uuid}`\n  // pageview, screenview, event, transaction, item, social, exception, timing\n  url += '&t=event'\n  // App Name\n  url += `&an=${encodeURI(__command.pluginBundle().name())}`\n  // App Version\n  url += `&av=${__command.pluginBundle().version()}`\n  // Event category\n  url += `&ec=${encodeURI(category)}`\n  // Event action\n  url += `&ea=${encodeURI(action)}`\n  // Event label\n  if (label) {\n    url += `&el=${encodeURI(label)}`\n  }\n  // Event value\n  if (value) {\n    url += `&ev=${encodeURI(value)}`\n  }\n\n  const session = NSURLSession.sharedSession()\n  const task = session.dataTaskWithURL(\n    NSURL.URLWithString(NSString.stringWithString(url))\n  )\n  task.resume()\n}\n","function createLookup(styles) {\n  return styles.reduce((prev, s) => {\n    // eslint-disable-next-line no-param-reassign\n    prev[s.name] = s\n    return prev\n  }, {})\n}\n\nexport default document => ({\n  layer: createLookup(document.getSharedLayerStyles()),\n  text: createLookup(document.getSharedTextStyles()),\n})\n","export default (\n  docSymbolInstances,\n  { symbolsMap, layerStylesMap, textStylesMap }\n) => {\n  docSymbolInstances.forEach(symbolInstance => {\n    symbolInstance.overrides.forEach(override => {\n      if (override.property === 'symbolID' && symbolsMap[override.value]) {\n        // eslint-disable-next-line no-param-reassign\n        override.value = symbolsMap[override.value]\n      }\n      if (\n        override.property === 'layerStyle' &&\n        layerStylesMap[override.value]\n      ) {\n        // eslint-disable-next-line no-param-reassign\n        override.value = layerStylesMap[override.value]\n      }\n      if (override.property === 'textStyle' && textStylesMap[override.value]) {\n        // eslint-disable-next-line no-param-reassign\n        override.value = textStylesMap[override.value]\n      }\n    })\n  })\n}\n","export default function(libraryStyles, lookup) {\n  const map = {}\n  libraryStyles.forEach(librarySharedStyle => {\n    const currentSharedStyle = lookup[librarySharedStyle.name]\n    if (currentSharedStyle) {\n      const imported = librarySharedStyle.import()\n      // if the shared style is coming from a library, then we just want to:\n      // - import the matching style\n      // - update all the instances to point to the imported style\n      if (currentSharedStyle.getLibrary()) {\n        map[currentSharedStyle.id] = imported.id\n        currentSharedStyle.getAllInstancesLayers().forEach(l => {\n          // eslint-disable-next-line no-param-reassign\n          l.sharedStyleId = imported.id\n          l.style.syncWithSharedStyle(imported)\n        })\n      } else {\n        currentSharedStyle.style = imported.style\n        currentSharedStyle\n          .getAllInstances()\n          .forEach(s => s.syncWithSharedStyle(currentSharedStyle))\n      }\n    }\n  })\n  return map\n}\n","// Replace all symbols in the document wich match their names with selected theme library\nexport default function(document, library) {\n  const docSymbols = document.getSymbols()\n  let docSymbolInstances = []\n  const symbolsMap = {}\n\n  if (!docSymbols.length) {\n    return { symbolsMap, docSymbolInstances }\n  }\n\n  const librarySymbols = library.getImportableSymbolReferencesForDocument(\n    document\n  )\n\n  docSymbols.forEach(symbolMaster => {\n    const instances = symbolMaster.getAllInstances()\n    docSymbolInstances = docSymbolInstances.concat(instances)\n\n    const matchingSymbolInLib = librarySymbols.find(\n      s => s.name === symbolMaster.name\n    )\n    if (!matchingSymbolInLib) {\n      return\n    }\n\n    // import the matching symbol\n    const importedSymbolMaster = matchingSymbolInLib.import()\n\n    // store the mapping so that we can update the overrides later on\n    symbolsMap[symbolMaster.symbolId] = importedSymbolMaster.symbolId\n\n    // update all the instances\n    instances.forEach(symbolInstance => {\n      // eslint-disable-next-line no-param-reassign\n      symbolInstance.symbolId = importedSymbolMaster.symbolId\n      // eslint-disable-next-line no-param-reassign\n      symbolInstance.name = importedSymbolMaster.name\n    })\n\n    // now that we replaced all the instances, we remove the master\n    // eslint-disable-next-line no-param-reassign\n    symbolMaster.parent = null\n  })\n\n  return { symbolsMap, docSymbolInstances }\n}\n","import sketch from 'sketch'\nimport googleAnalytics from './analytics'\nimport syncLibrary from './sync-library'\n\n// Replace layerStyles and textLayerStyles in the document with selected theme library\nexport default function() {\n  const libraries = sketch.getLibraries().filter(l => l.valid && l.enabled)\n  const [, selectionIndex, ok] = sketch.UI.getSelectionFromUser(\n    \"Select a theme library to replace magically document's layer styles and symbols 🎉\",\n    libraries.map(l => l.name)\n  )\n  googleAnalytics('Open Camilo', 'Alert', 'UI')\n\n  // Depending selected control, current document will sync with predefined brand\n  if (ok) {\n    const doc = sketch.getSelectedDocument()\n    const chosenLibrary = libraries[selectionIndex]\n\n    googleAnalytics('Camilo replacement with', chosenLibrary.name, 'Library')\n\n    syncLibrary(doc, chosenLibrary)\n\n    sketch.UI.message(\n      `🎉 🎈 🙌🏼  Applied theme from ${chosenLibrary.name}  🙌🏼 🎉 🎈`\n    )\n  }\n}\n","import mapSharedStyles from './map-shared-styles'\nimport replaceSymbols from './replace-symbols'\nimport replaceOverrides from './replace-overrides'\nimport replaceSharedStyles from './replace-shared-styles'\n\nexport default function(document, library) {\n  const lookups = mapSharedStyles(document)\n\n  // replace the styles\n  const layerStylesMap = replaceSharedStyles(\n    library.getImportableLayerStyleReferencesForDocument(document),\n    lookups.layer\n  )\n  const textStylesMap = replaceSharedStyles(\n    library.getImportableTextStyleReferencesForDocument(document),\n    lookups.text\n  )\n\n  // replace the symbols\n  const { symbolsMap, docSymbolInstances } = replaceSymbols(document, library)\n\n  replaceOverrides(docSymbolInstances, {\n    symbolsMap,\n    layerStylesMap,\n    textStylesMap,\n  })\n\n  // reload the inspector to make sure we show the latest changes\n  document.sketchObject.reloadInspector()\n}\n","module.exports = require(\"sketch\");"],"sourceRoot":""}